//https://leetcode.com/problems/climbing-stairs/description/

var climbStairs = function (n) {
  if (n === 1) return 1;
  if (n === 2) return 2;
  const result = [1, 2];
  for (let i = 2; i < n; i++) {
    result.push(result[i - 1] + result[i - 2]);
  }
  return result.pop();
};

const testCases = [
  [2, 2],
  [3, 3],
  [4, 5],
  [5, 8],
  [6, 13],
  [7, 21],
  [8, 34],
  [9, 55],
  [10, 89],
  [11, 144],
  [12, 233],
  [13, 377],
  [14, 610],
  [15, 987],
  [16, 1597],
  [17, 2584],
  [18, 4181],
  [19, 6765],
  [20, 10946],
  [21, 17711],
  [22, 28657],
  [23, 46368],
  [24, 75025],
  [25, 121393],
  [26, 196418],
  [27, 317811],
  [28, 514229],
  [29, 832040],
  [30, 1346269],
  [31, 2178309],
  [32, 3524578],
  [33, 5702887],
  [34, 9227465],
  [35, 14930352],
  [36, 24157817],
  [37, 39088169],
  [38, 63245986],
  [39, 102334155],
  [40, 165580141],
  [41, 267914296],
  [42, 433494437],
  [43, 701408733],
  [44, 1134903170],
  [45, 1836311903],
  [46, 2971215073],
  [47, 4807526976],
  [48, 7778742049],
  [49, 12586269025],
  [50, 20365011074],
  [51, 32951280099],
  [52, 53316291173],
  [53, 86267571272],
  [54, 139583862445],
  [55, 225851433717],
  [56, 365435296162],
  [57, 591286729879],
  [58, 956722026041],
  [59, 1548008755920],
  [60, 2504730781961],
  [61, 4052739537881],
];

testCases.forEach((element) => {
  console.log(climbStairs(element[0]), "expected value = ", element[1]);
});
